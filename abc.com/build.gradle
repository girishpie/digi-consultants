buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin:"com.moowork.node"
apply plugin: 'docker'

repositories
        {
            mavenCentral()
        }

node
{
            version = "6.11.3"
            download = false
            nodeModulesDir = file("client")
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
            group = 'build'
            description = 'Compile client side folder for development'
            args = ['run','buildDev']
}

task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
            group = 'application'
            description = "Build and watches the client side assets for rebuilding"
            args = ['run','buildWatch']
}
task buildClient(type:NpmTask, dependsOn:'npmInstall') {
            group = 'build'
            description = "Compile client side folder for production"
            args = ['run','build']
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into "${stageDir}/target"
        }
    }
}

jar {
    baseName = 'DigiConsultant'
    version =  '0.1.0'
}

bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)


repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
  
    compile("org.springframework.boot:spring-boot-starter-jetty")
   
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    
    compile("org.springframework.boot:spring-boot-starter-mail")
    compile (group: 'org.springframework', name: 'spring-context')
    compile (group: 'org.springframework', name: 'spring-context-support')
    compile (group: 'com.sun.mail', name: 'javax.mail', version: '1.6.0')

    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile (group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.1')
    compile (group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1')
    compile (group: 'org.springframework.security.oauth', name: 'spring-security-oauth2')
    compile("org.aspectj:aspectjweaver")
 
    testCompile("org.springframework.boot:spring-boot-starter-test")
}